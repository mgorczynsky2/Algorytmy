using System.Collections.Specialized;
using System.Numerics;

namespace mg1
{

    public partial class Form1 : Form
    {
        int[] tab = {7,6,5,3,2,1};
        public Form1()
        {
            InitializeComponent();
        }

        public void button1_Click(object sender, EventArgs e)
        {
            int liczbaN =(int)liczba_n.Value;
            //long wynik = Fib2(liczbaN);
            MessageBox.Show(wypisz(tab));
        }
        static int[] sortuj(int[] tab)
        {
            int n = tab.Length;

            for (int i = 0; i < n - 1; i++)
                for (int j = 0; j < n - i - 1; j++)
                    if (tab[j] > tab[j + 1])
                    {
                        int temp = tab[j];
                        tab[j] = tab[j + 1];
                        tab[j + 1] = temp;
                    }
            return tab;
        }
        string wypisz(int[]tab)
        {
            String a = "";
            for(int i=0;i<tab.Length;i++)
            {
                a = a + tab[i];
            }
            return a;
        }

        private void Sortuj_Click(object sender, EventArgs e)
        {
            MessageBox.Show(wypisz(sortuj(tab)));
        }
        /*
int Fib(int n)
{
   if (n == 0)
       return 0;
   if (n == 1)
       return 1;
   return Fib(n - 1) + Fib(n - 2);
}
long Fib2(int n)
{
   if (n == 0)
       return 0;
   if (n == 1)
       return 1;
   long[] wyrazy = new long[n+1];
  wyrazy[0] = 0;
  wyrazy[1] = 1;
  for(int i=2;i<wyrazy.Length;i++)
   {
       wyrazy[i] = wyrazy[i - 1] + wyrazy[i - 2];
   }
   return wyrazy[n];
}
*/

    }
}

public class Main {
    public static void main(String[] args) {
        int[] tab={2,5,1,3,4,7,6};
        wypisz(sortowaniew(tab));

    }
    public static void wypisz(int []tab)
    {
        for(int i=0;i<tab.length;i++)
        {
            System.out.println(tab[i]);
        }
    }

    public static int[] sortowaniew(int[] tab) {
        int min;
        int pom;
        for (int i = 0; i < tab.length; i++)
        {
            min=i;
            for(int j=i+1;j<tab.length;j++)
            {
                if(tab[j]<tab[min])
                    min=j;
            }
            pom=tab[i];
            tab[i]=tab[min];
            tab[min]=pom;

        }
        return tab;
    }

}


import java.util.Arrays;

class SelectionSort {
    void selectionSort(int array[]) {
        int size = array.length;
        int min_idx;
        int temp;
        for (int step = 0; step < size - 1; step++) {
            min_idx = step;

            for (int i = step + 1; i < size; i++) {

                // To sort in descending order, change > to < in this line.
                // Select the minimum element in each loop.
                if (array[i] < array[min_idx]) {
                    min_idx = i;
                }
            }

            // put min at the correct position
            temp = array[step];
            array[step] = array[min_idx];
            array[min_idx] = temp;
        }
    }

    // driver code
    public static void main(String args[]) {
        int[] data = {16,2,4,7,8,2,10};
        SelectionSort ss = new SelectionSort();
        ss.selectionSort(data);
        System.out.println("Sorted Array in Ascending Order: ");
        System.out.println(Arrays.toString(data));
    }
}
